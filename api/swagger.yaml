---
swagger: "2.0"
info:
  description: 향수 정보 서비스 A.fume Server Api 문서
  version: 1.0.0
  title: Swagger A.fume Server
  termsOfService: http://swagger.io/terms/
  contact:
    email: heesung6701@naver.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /A.fume/api/0.0.1
tags:
- name: perfume
  description: 향수 정보
- name: series
  description: 계열
- name: ingredient
  description: 향료
- name: brand
  description: 브랜드
- name: review
  description: 시향기
- name: keyword
  description: 키워드
- name: user
  description: 사용자

schemes:
#- https
- http
security:
- userToken: []
paths:
  /perfume/search:
    post:
      tags:
      - perfume
      summary: 향수 검색
      description: 카테코리(키워드, 브랜드, 재료)는 AND 검색이며 카테고리 내 선택은 OR 검색이다. <br/> 반환 되는 정보 [향수, 좋아요 여부]
      operationId: searchPerfume
      security:
        - userToken: []
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          type: object
          properties:
            searchText:
              type: string
              example: 'Tom'
            keywordList:
              type: array
              items:
                type: integer
              example: []
            ingredientList:
              type: array
              items:
                type: integer
              example: []
            brandList:
              type: array
              items: 
                type: integer
              example: []
      - name: sort
        in: query
        type: string
        enum:
        - createdAt_asc
        - createdAt_desc
        required: false
      - name: pagingSize
        in: query
        type: integer
        required: false
      - name: pagingIndex
        in: query
        type: integer
        required: false
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: 향수 검색 성공
              data:
                type: object
                properties:
                  count:
                    type: integer
                    example: 1
                  rows:
                    type: array
                    items:
                      allOf:
                      - $ref: '#/definitions/Perfume'
                      - type: object
                        properties:
                          isLiked:
                            type: boolean
                        example: 
                          isLiked: true
        401:
          description: Token is missing or invalid
      x-swagger-router-controller: Perfume
  /perfume/recent:
    get:
      tags:
      - perfume
      summary: 최근 조회한 향수 조회
      description: <h3> 🎫로그인 토큰 필수🎫 </h3> <br/> 최근에 향수 세부 보기를 수행한 향수들을 조회한다. <br/> 반환 되는 정보 [향수, 좋아요 여부]
      operationId: getRecentPerfume
      security:
      - userToken: []
      x-security-scopes:
      - user
      produces:
      - application/json
      parameters:
      - name: pagingSize
        in: query
        type: integer
        required: false
      - name: pagingIndex
        in: query
        type: integer
        required: false
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: 향수 검색 성공
              data:
                type: object
                properties:
                  count:
                    type: integer
                    example: 1
                  rows:
                    type: array
                    items:
                      allOf:
                      - $ref: '#/definitions/Perfume'
                      - type: object
                        properties:
                          isLiked:
                            type: boolean
                        example: 
                          isLiked: true
        401:
          description: Token is missing or invalid
      x-swagger-router-controller: Perfume
  /perfume/new:
    get:
      tags:
      - perfume
      summary: 새로 등록한 향수 조회
      description: 최근에 서버에 등록된 향수를 조회한다. <br/> 반환 되는 정보 [향수, 좋아요 여부]
      operationId: getNewPerfume
      produces:
      - application/json
      parameters:
      - name: pagingSize
        in: query
        type: integer
        required: false
      - name: pagingIndex
        in: query
        type: integer
        required: false
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: 향수 검색 성공
              data:
                type: object
                properties:
                  count:
                    type: integer
                    example: 1
                  rows:
                    type: array
                    items:
                      allOf:
                      - $ref: '#/definitions/Perfume'
                      - type: object
                        properties:
                          isLiked:
                            type: boolean
                        example: 
                          isLiked: true
        401:
          description: Token is missing or invalid
      x-swagger-router-controller: Perfume
  /perfume/survey:
    get:
      tags:
      - perfume
      summary: 서베이 추천 향수 조회 
      description: <h3> 🎫로그인 토큰 필수🎫 </h3> <br/> 유저의 성별에 따라서 다른 향수 리스트를 반환한다. <br/> 반환 되는 정보 [향수]
      operationId: getSurveyPerfume
      security:
        - userToken: []
      x-security-scopes:
        - user
      produces:
      - application/json
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: 서베이 추천 향수 조회 성공
              data:
                type: object
                properties:
                  count:
                    type: integer
                    example: 1
                  rows:
                    type: array
                    items:
                      $ref: '#/definitions/Perfume'
        401:
          description: Token is missing or invalid
      x-swagger-router-controller: Perfume
  /perfume/recommend/common:
    get:
      tags:
      - perfume
      summary: 향수 일반 추천 (성별, 나이 반영)
      description: 유저 연령, 성별에 따른 향수를 추천해준다. (로그인 이전의 경우 20대 여성 기본 값) <br/> 반환 되는 정보 [향수, 좋아요 여부]
      operationId: recommendCommonPerfume
      security:
        - userToken: []
      produces:
      - application/json
      parameters:
      - name: pagingSize
        in: query
        type: integer
        required: false
      - name: pagingIndex
        in: query
        type: integer
        required: false
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: 향수 검색 성공
              data:
                type: object
                properties:
                  count:
                    type: integer
                    example: 1
                  rows:
                    type: array
                    items:
                      allOf:
                      - $ref: '#/definitions/Perfume'
                      - type: object
                        properties:
                          isLiked:
                            type: boolean
                        example: 
                          isLiked: true
      x-swagger-router-controller: Perfume
  /perfume/recommend/personal:
    get:
      tags:
      - perfume
      summary: 향수 개인 맞춤 추천
      description: <h3> 🎫로그인 토큰 필수🎫 </h3> <br/> 데이터를 활용해서 향수를 추천해준다. <br/> 반환 되는 정보 [향수, 좋아요 여부]
      operationId: recommendPersonalPerfume
      security:
        - userToken: []
      x-security-scopes:
        - user
      produces:
      - application/json
      parameters:
      - name: pagingSize
        in: query
        type: integer
        required: false
      - name: pagingIndex
        in: query
        type: integer
        required: false
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: 향수 검색 성공
              data:
                type: object
                properties:
                  count:
                    type: integer
                    example: 1
                  rows:
                    type: array
                    items:
                      allOf:
                      - $ref: '#/definitions/Perfume'
                      - type: object
                        properties:
                          isLiked: 
                            type: boolean
                        example:
                          isLiked: true
        401:
          description: Token is missing or invalid
      x-swagger-router-controller: Perfume
  /perfume/{perfumeIdx}:
    get:
      tags:
      - perfume
      summary: 향수 세부 정보 조회
      operationId: getPerfume
      security:
        - userToken: []
      produces:
      - application/json
      parameters:
      - name: perfumeIdx
        in: path
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: 향수 세부 조회 성공
              data:
                allOf:
                - $ref: '#/definitions/Perfume'
                - type: object
                  properties:
                    isLiked:
                      type: integer
                    reviewIdx:
                      type: integer
                    Keywords:
                      type: array
                      items:
                        $ref: '#/definitions/KeywordInfo'
                - $ref: '#/definitions/PerfumeDetailInfo'
                - $ref: '#/definitions/PerfumeNote'
                - $ref: '#/definitions/PerfumeSummary'
                example:
                  isLiked: true
                  story: 조 말론 런던 1호점이 위치한 런던의 거리 번호입니다. 광범위한 후각적 탐구를 요하는 이 향수는 만다린, 그레이프 프루트\
                        , 바질, 너트맥, 베티버와 같은 브랜드를 대표하는 성분들을 모두 함유하고 있습니다. 다양한 느낌을 연출하는 향입니다.
                  abundanceRate: 코롱
                  imageUrls: []
                  volumeAndPrice:
                  - 90,000/30ml
                  - 100,000/50ml
                  - 19,000/100ml
                  Keywords:
                  - 시원한
                  - 차가운
                  noteType: 0
                  reviewIdx: 1
                  ingredients:
                    top: 재료1, 재료5
                    middle: 재료2, 재료6
                    base: 재료3, 재료4, 재료7
                    single: ''
                  score: 5.4
                  seasonal:
                    spring: 0
                    summer: 30
                    fall: 30
                    winter: 40
                  sillage:
                    light: 40
                    medium: 20
                    heavy: 40
                  longevity:
                    veryWeak: 10
                    weak: 10
                    normal: 20
                    strong: 20
                    veryStrong: 10
        401:
          description: Token is missing or invalid
        404:
          description: Perfume not found
      x-swagger-router-controller: Perfume
  /perfume/{perfumeIdx}/like:
    post:
      tags:
      - perfume
      summary: 향수 좋아요
      description: <h3> 🎫로그인 토큰 필수🎫 </h3> <br/> 향수 좋아요 / 좋아요 취소를 수행한다. <br/> 반환 되는 정보 [최종 좋아요 상태]
      security:
        - userToken: []
      x-security-scopes:
        - user
      operationId: likePerfume
      produces:
      - application/json
      parameters:
      - name: perfumeIdx
        in: path
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: 향수 세부 조회 성공
              data:
                type: boolean
                example: true
                description: 요청 이후 좋아요 상태
        401:
          description: Token is missing or invalid
        404:
          description: Perfume not found
      x-swagger-router-controller: Perfume
  /perfume/{perfumeIdx}/review:
    post:
      tags:
      - review
      summary: 시향노트 추가
      description: <h3> 🎫로그인 토큰 필수🎫 </h3> <br/> 시향노트를 작성한다.
      operationId: postReview
      security:
        - userToken: []
      x-security-scopes:
        - user
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: perfumeIdx
        in: path
        description: 향수 Idx
        required: true
        type: integer
        format: int64  
      - name: body
        in: body
        description: 시향노트 정보
        required: true
        schema:
          allOf:
            - $ref: '#/definitions/ReviewInfo'
            - type: object
              example:
                keywordList:  [1, 2]
              properties:
                keywordList: 
                  type: array
                  items:
                    type: integer
                    format: int64
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message: 
                type: string
                example: 시향노트 추가 성공
              data:
                type: object
                properties:
                  reviewIdx:
                    type: integer
                    format: int64
                    example: 40
        401:
          description: Token is missing or invalid
      x-swagger-router-controller: Review
    get:
      tags:
      - review
      summary: 향수별 시향 노트 전체 조회 
      description: <h3> 🎫로그인 토큰 필수🎫 </h3> 해당 향수에 작성된 시향 노트 리스트를 반환한다. <br/> 반환되는 정보 [시향노트]
      operationId: getPerfumeReview
      security:
        - userToken: []
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: perfumeIdx
        in: path
        description: 향수 Idx
        required: true
        type: integer
        format: int64
      # - name: sort
      #   in: query
      #   type: string
      #   enum:
      #   - likeCount_asc
      #   - score_asc
      #   - likeCount_desc
      #   - score_desc
      #   required: false
      # - name: pagingSize
      #   in: query
      #   type: integer
      #   required: false
      # - name: pagingIndex
      #   in: query
      #   type: integer
      #   required: false
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message: 
                type: string
                example: 특정 향수의 시향노트 목록 조회 성공
              data:
                type: array
                items:
                  type: object
                  properties: 
                    reviewIdx:
                      type: integer
                      format: int64
                    score:
                      type: integer
                      format: int64
                    access:
                      type: boolean
                    content:
                      type: string
                    likeCount:
                      type: integer
                      format: int64
                    isLiked: 
                      type: boolean
                    age:
                      type: string
                    userGender: 
                      type: string
                    nickname:
                      type: string
                    createTime:
                      type: string
                  example:
                    reviewIdx: 339
                    score: 5
                    access: true
                    content: "시향노트 내용"
                    likeCount: 3
                    isLiked: true
                    userGender: 여자
                    age: 20대 중반
                    nickname: 담담
                    createTime: '2020-12-07 00:11:41'
      x-swagger-router-controller: Review
  /review/{reviewIdx}:
    get:
      tags:
      - review
      summary: 시향노트 조회
      description: 특정 시향노트 가져오기 <br/> 반환 되는 정보 [시향 노트]
      operationId: getReviewByIdx
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: reviewIdx
        in: path
        description: 시향노트 Idx
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message: 
                type: string
                example: 시향노트 조회 성공
              data:
                allOf:
                - $ref: '#/definitions/ReviewInfo'
                - type: object
                  properties: 
                    reviewIdx:
                      type: integer
                      format: int64
                    Perfume:
                      type: object
                      properties:
                        perfumeIdx:
                          type: integer
                          format: int64
                        perfumeName:
                          type: integer
                          format: int64
                        imageUrl:
                          type: string
                    KeywordList: 
                      type: array
                      items: 
                        type: object
                        properties:
                          keywordIdx:
                            type: integer
                            format: int64
                          name:
                            type: string
                    Brand:
                      type: object
                      properties:
                        brandIdx:
                          type: integer
                          format: int64
                        brandName:
                          type: string
                  example:
                    reviewIdx: 1
                    Perfume:
                      perfumeIdx: 1
                      perfumeName:  154 코롱
                      imageUrl: https://contents.lotteon.com/itemimage/_v065423/LE/12/04/59/50/19/_1/22/48/08/13/9/LE1204595019_1224808139_1.jpg/dims/resizef/554X554
                    KeywordList:
                      -
                        keywordIdx: 1
                        name: 달달한
                    Brand:
                      brandIdx: 1
                      brandName: Jo Malone
        400:
          description: Invalid ID supplied
        401:
          description: Token is missing or invalid
        404:
          description: Review not found
      x-swagger-router-controller: Review
    put:
      tags:
      - review
      summary: 시향노트 수정
      description: <h3> 🎫로그인 토큰 필수🎫 </h3> <br/> 시향 노트를 수정한다.
      operationId: putReview
      security:
        - userToken: []
      x-security-scopes:
        - user
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: reviewIdx
        in: path
        description: 시향노트 Idx
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        required: false
        schema:
          allOf:
            - $ref: '#/definitions/ReviewInfo'
            - type: object
              example:
                keywordList:  [3, 4]
              properties:
                keywordList: 
                  type: array
                  items:
                    type: integer
                    format: int64
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message: 
                type: string
                example: 시향노트 수정 성공
        400:
          description: Invalid ID supplied
        401:
          description: Token is missing or invalid
      x-swagger-router-controller: Review
    delete:
      tags:
      - review
      summary: 시향노트 삭제
      description: <h3> 🎫로그인 토큰 필수🎫 </h3> <br/> 시향노트 삭제하기
      operationId: deleteReview
      security:
        - userToken: []
      x-security-scopes:
        - user
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: reviewIdx
        in: path
        description: 시향노트 Idx
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message: 
                type: string
                example: 시향노트 삭제 성공
        400:
          description: Invalid ID supplied
        401:
          description: Token is missing or invalid
      x-swagger-router-controller: Review
  /review/{reviewIdx}/like:
    post:
      tags:
      - review
      summary:  시향노트 좋아요
      description: <h3> 🎫로그인 토큰 필수🎫 </h3> <br/> 시향노트 좋아요 상태 변경하기. <br/> 반환 되는 정보 [최종 좋아요 상태]
      security:
        - userToken: []
      x-security-scopes:
        - user
      operationId: likeReview
      produces:
      - application/json
      parameters:
      - name: reviewIdx
        in: path
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: 시향노트 좋아요 상태 변경 성공
              data:
                type: boolean
                example: true
        401:
          description: Not authenticated
        403:
          description: Access token does not have the required scope
        404:
          description: Review Like not found
      x-swagger-router-controller: Review
  /keyword:
    get:
      tags:
      - keyword
      summary: 키워드 목록 전체 조회
      operationId: getKeywordAll
      produces:
      - application/json
      parameters:
      - name: pagingSize
        in: query
        type: integer
        required: false
      - name: pagingIndex
        in: query
        type: integer
        required: false
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: 키워드 목록 전체 조회 성공
              data:
                type: object
                properties:
                  count:
                    type: integer
                    example: 1
                  rows:
                    type: array
                    items:
                      allOf:
                      - $ref: '#/definitions/KeywordInfo'
                      - type: object
                        properties:
                          keywordIdx:
                            type: integer
                        example:
                          keywordIdx: 1
        401:
          description: Token is missing or invalid
      x-swagger-router-controller: Keyword
  /user/{userIdx}/perfume/liked:
    get:
      tags:
      - perfume
      summary: read user's likedPerfume
      description: <h3> 🎫로그인 토큰 필수🎫 </h3> <br/> 유저가 좋아요한 향수 조회 <br/> 반환 되는 정보 [향수]
      operationId: getLikedPerfume
      security:
        - userToken: []
      x-security-scopes:
        - user
      produces:
      - application/json
      parameters:
      - name: userIdx
        in: path
        required: true
        type: string
      - name: pagingSize
        in: query
        type: integer
        required: false
      - name: pagingIndex
        in: query
        type: integer
        required: false
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              message:
                type: string
                example: 유저가 좋아요한 향수 조회 성공
              data:
                type: array
                items:               
                  allOf:
                  - $ref: '#/definitions/Perfume'
        default:
          description: successful operation
      x-swagger-router-controller: Perfume
  /user/review:
    get:
      tags:
      - review
      summary: 마이퍼퓸 조회
      description: <h3> 🎫로그인 토큰 필수🎫 </h3> <br/> 유저가 작성한 리뷰 전체 조회
      operationId: getReviewOfUser
      security:
        - userToken: []
      x-security-scopes:
        - user
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              message:
                type: string
                example: 마이퍼퓸 조회 성공
              data:
                type: array
                items:
                  type: object
                  properties: 
                    reviewIdx: 
                      type: integer
                      example: 1
                    score:
                      type: number
                      example: 4.5
                    perfumeIdx:
                      type: integer
                      example: 1
                    perfumeName:
                      type: string
                      example: 154 코롱
                    imageUrl:
                      type: string
                      example: https://contents.lotteon.com/itemimage/_v065423/LE/12/04/59/50/19/_1/22/48/08/13/9/LE1204595019_1224808139_1.jpg/dims/resizef/554X554
                    brandIdx: 
                      type: integer
                      example: 1
                    brandName:
                      type: string
                      example: (테스트)조말론
        default:
          description: successful operation
      x-swagger-router-controller: Review
securityDefinitions:
  userToken:
      type: apiKey
      name: x-access-token
      in: header
      description: /Bearer {token}/ 를 입력해주시면 됩니다.
  APIKeyHeader:
    type: apiKey
    name: X-API-Key
    in: header
definitions:
  KeywordInfo:
    type: object
    properties:
      keywordIdx:
        type: number
        example: 1
      name:
        type: string
        example: 달달한
  PerfumeInfo:
    type: object
    properties:
      name:
        type: string
      englishName:
        type: string
      brandIdx:
        type: integer
      imageUrl:
        type: string
    example:
      name: 154 코롱
      englishName: 154 kolon
      brandIdx: 1
      imageUrl: https://contents.lotteon.com/itemimage/_v065423/LE/12/04/59/50/19/_1/22/48/08/13/9/LE1204595019_1224808139_1.jpg/dims/resizef/554X554
  Perfume:
    allOf:
    - $ref: '#/definitions/PerfumeInfo'
    - type: object    
      properties:
        perfumeIdx:
          type: integer
    example:
      perfumeIdx: 1
      name: 154 코롱
      imageUrl: https://contents.lotteon.com/itemimage/_v065423/LE/12/04/59/50/19/_1/22/48/08/13/9/LE1204595019_1224808139_1.jpg/dims/resizef/554X554
      brandName: (테스트)조말론
  PerfumeDetailInfo:
    properties:
      story:
        type: string
      abundanceRate:
        type: string
        enum:
        - None
        - 오 드 코롱
        - 코롱
        - 오 드 뚜왈렛
        - 오 드 퍼퓸
        - 퍼퓸
      imageUrls:
        type: array
        items:
          type: string
      volumeAndPrice:
        type: array
        items:
          type: string
    example:
      story: 조 말론 런던 1호점이 위치한 런던의 거리 번호입니다. 광범위한 후각적 탐구를 요하는 이 향수는 만다린, 그레이프 프루트\
        , 바질, 너트맥, 베티버와 같은 브랜드를 대표하는 성분들을 모두 함유하고 있습니다. 다양한 느낌을 연출하는 향입니다.
      abundanceRate: 코롱
      volumeAndPrice:
      - 90,000/30ml
      - 100,000/50ml
      - 190,000/100ml
      imageUrls: []
  PerfumeSummary:
    properties:
      score:
        type: number
        description: 점수 평균 값
        minimum: 0
        maximum: 5
      longevity:
        type: object
        description: 지속감
        properties:
          veryWeak:
            type: number
            minimum: 0
            maximum: 100
            description: 매우 약함
          weak:
            type: number
            minimum: 0
            maximum: 100
            description: 약함
          medium:
            type: number
            minimum: 0
            maximum: 100
            description: 보통
          strong:
            type: number
            minimum: 0
            maximum: 100
            description: 강함
          veryStrong:
            type: number
            minimum: 0
            maximum: 100
            description: 매우 강함
      sillage:
        type: object
        description: 잔향감
        properties:
          light:
            type: number
            minimum: 0
            maximum: 100
            description: 약함
          normal:
            type: number
            minimum: 0
            maximum: 100
            description: 보통
          heavy:
            type: number
            minimum: 0
            maximum: 100
            description: 강함
      seasonal:
        type: object
        properties:
          spring:
            type: number
            minimum: 0
            maximum: 100
            description: 봄
          summer:
            type: number
            minimum: 0
            maximum: 100
            description: 여름
          fall:
            type: number
            minimum: 0
            maximum: 100
            description: 가을
          winter:
            type: number
            minimum: 0
            maximum: 100
            description: 겨울
    example:
      score: 5.4
      seasonal:
        spring: 0
        summer: 30
        fall: 30
        winter: 40
      sillage:
        light: 40
        medium: 20
        heavy: 40
      longevity:
        veryWeak: 10
        weak: 10
        normal: 20
        strong: 20
        veryStrong: 10
  PerfumeNote:
    properties:
      noteType:
        type: integer
        description: 0은 일반 노트, 1은 single 노트
      ingredients:
        $ref: '#/definitions/IngredientMap'
  NoteInfo:
    type: object
    properties:
      ingredientIdx:
        type: integer
      perfumeIdx:
        type: integer
      type: 
        type: integer
    example:
      ingredientIdx: 1
      perfumeIdx: 1
      type: 4
  ReviewInfo:
    type: object
    properties:
      score:
        description: 별점
        type: number
        minimum: 1
        maximum: 5
      content:
        description: 내용
        type: string  
      longevity:
        description: 지속력
        type: integer
        format: int64
        enum:
        - -1
        - 0
        - 1
        - 2
        - 3
        - 4
      sillage:
        description: 잔향감
        type: integer
        format: int64
        enum:
        - -1
        - 0
        - 1
        - 2
      seasonal:
        description: 계절감
        type: array
        items:
          type: string
          enum:
            - 봄
            - 여름
            - 가을
            - 겨울        
      gender:
        description: 성별감
        type: integer
        format: int64
        enum:
        - -1
        - 0
        - 1
        - 2
      access: 
        description: 시향노트 공유 여부
        type: boolean
        enum:
        - true
        - false
    example:
      score: 1
      longevity: 0
      sillage: 1
      seasonal:
      - 겨울
      - 가을
      gender: 2
      access: true
      content: 시향노트 내용
  IngredientMap:
    type: object
    properties:
      top:
        type: string
      middle:
        type: string
      base:
        type: string
      single:
        type: string
  ApiResponse:
    type: object
    properties:
      message:
        type: string
        example: 메세지
      data:
        type: string
        example: 0
externalDocs:
  description: Afume Server Git Wiki
  url: https://github.com/A-fume/A.fume.Server/wiki
