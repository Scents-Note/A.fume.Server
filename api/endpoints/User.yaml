paths:
  /user/survey:
    post:
      tags:
      - user
      description: <h3> üé´Î°úÍ∑∏Ïù∏ ÌÜ†ÌÅ∞ ÌïÑÏàòüé´ </h3> <br/> ÏÇ¨Ïö©Ïûê ÏÑúÎ≤†Ïù¥Î•º Îì±Î°ùÌïúÎã§. <br/>
      operationId: postSurvey
      security:
        - userToken: []
      x-security-scopes:
        - user
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            keywordList:
              type: array
              items:
                type: integer
              example: [1, 2]
            seriesList:
              type: array
              items:
                type: integer
              example: [1, 2]
            perfumeList:
              type: array
              items: 
                type: integer
              example: [1, 2]
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: User
  /user/register:
    post:
      tags:
      - user
      description: ÏÇ¨Ïö©Ïûê ÌöåÏõê Í∞ÄÏûÖ
      operationId: registerUser
      produces:
      - application/json
      - application/x-www-urlencoded
      consumes:
      - application/json
      - application/x-www-urlencoded
      parameters:
      - in: body
        name: body
        description: Created user object
        required: true
        schema:
          allOf:
          - $ref: '#/definitions/User'
          - type: object
            properties:
              password:
                type: string
            example:
              password: test
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              message:
                type: string
                example: ÌöåÏõêÍ∞ÄÏûÖ ÏÑ±Í≥µ
              data:
                type: object
                properties:
                  userIdx:
                    type: integer
                    example: 29
                  token:
                    type: string
                    description: loginÏö© userToken
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWR4IjoyOSwiZW1haWwiOiJoZWUueW91bkBzYW1zdW5nLmNvbSIsIm5pY2tuYW1lIjoi7L-87Lm066eoIiwiZ2VuZGVyIjoxLCJwaG9uZSI6IjAxMC0yMDgxLTM4MTgiLCJiaXJ0aCI6MTk5NSwiZ3JhZGUiOjAsImFjY2Vzc1RpbWUiOiIyMDIxLTAyLTI4VDA4OjEwOjI4LjAwMFoiLCJjcmVhdGVkQXQiOiIyMDIxLTAyLTI4VDAwOjUyOjI4LjAwMFoiLCJ1cGRhdGVkQXQiOiIyMDIxLTAyLTI4VDA4OjEwOjI4LjAwMFoiLCJpYXQiOjE2MTQ0OTk5OTQsImV4cCI6MTYxNjIyNzk5NCwiaXNzIjoiYWZ1bWUtamFja3BvdCJ9.lztExrMNy-HCeaDDheos-EXRQEHMdVmQNiaYvKBPHGw
                  refreshToken:
                    type: string
                    description: token Ïû¨Î∞úÍ∏â Ïö© 
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyZWZyZXNoVG9rZW4iOnsidXNlcklkeCI6MSwiZW1haWwiOiJoZWUueW91bkBzYW1zdW5nLmNvbSIsIm5pY2tuYW1lIjoi7L-87Lm066eoIiwiZ2VuZGVyIjoxLCJwaG9uZSI6IjAxMC0yMDgxLTM4MTgiLCJiaXJ0aCI6MTk5NSwiZ3JhZGUiOjAsImFjY2Vzc1RpbWUiOiIyMDIxLTAxLTA1VDEzOjAzOjQwLjAwMFoiLCJjcmVhdGVkQXQiOiIyMDIxLTAxLTA1VDEzOjAzOjQwLjAwMFoiLCJ1cGRhdGVkQXQiOiIyMDIxLTAxLTA1VDEzOjAzOjQwLjAwMFoifSwiaWF0IjoxNjA5ODUxODIzLCJleHAiOjE2MTE1Nzk4MjMsImlzcyI6ImFmdW1lLWphY2twb3QifQ.Vb9-KO1DWOBhuVAoBzh0USybt5b5YpZqfqG1OU3snUY    
        default:
          description: successful operation
      x-swagger-router-controller: User
  /user/login:
    post:
      tags:
      - user
      description: Î°úÍ∑∏Ïù∏ <br/> Î∞òÌôò ÎêòÎäî Ï†ïÎ≥¥ [Ïú†Ï†Ä Ï†ïÎ≥¥ + Token + refresh Token] <br/> Î∞úÌñâÎêú Î°úÍ∑∏Ïù∏ ÌÜ†ÌÅ∞ÏùÄ Ìó§Îçî[x-access-token="Bearer " + Token]Ïóê ÎÑ£Ïñ¥Ï£ºÏÑ∏Ïöî.
      operationId: loginUser
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        schema:
          type: object
          properties:
            email:
              type: string
              example: hee.youn@samsung.com
            password:
              type: string
              example: test
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              message:
                type: string
                example: Î°úÍ∑∏Ïù∏ ÏÑ±Í≥µ
              data:
                type: object
                properties:
                  userIdx:
                    type: integer
                    example: 29
                  nickname:
                    type: string
                    example: nickname
                  gender:
                    type: string
                    example: MAN
                  birth:
                    type: integer
                    example: 1995
                  token:
                    type: string
                    description: loginÏö© userToken
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWR4IjoyOSwiZW1haWwiOiJoZWUueW91bkBzYW1zdW5nLmNvbSIsIm5pY2tuYW1lIjoi7L-87Lm066eoIiwiZ2VuZGVyIjoxLCJwaG9uZSI6IjAxMC0yMDgxLTM4MTgiLCJiaXJ0aCI6MTk5NSwiZ3JhZGUiOjAsImFjY2Vzc1RpbWUiOiIyMDIxLTAyLTI4VDA4OjEwOjI4LjAwMFoiLCJjcmVhdGVkQXQiOiIyMDIxLTAyLTI4VDAwOjUyOjI4LjAwMFoiLCJ1cGRhdGVkQXQiOiIyMDIxLTAyLTI4VDA4OjEwOjI4LjAwMFoiLCJpYXQiOjE2MTQ0OTk5OTQsImV4cCI6MTYxNjIyNzk5NCwiaXNzIjoiYWZ1bWUtamFja3BvdCJ9.lztExrMNy-HCeaDDheos-EXRQEHMdVmQNiaYvKBPHGw
                  refreshToken:
                    type: string
                    description: token Ïû¨Î∞úÍ∏â Ïö© 
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyZWZyZXNoVG9rZW4iOnsidXNlcklkeCI6MSwiZW1haWwiOiJoZWUueW91bkBzYW1zdW5nLmNvbSIsIm5pY2tuYW1lIjoi7L-87Lm066eoIiwiZ2VuZGVyIjoxLCJwaG9uZSI6IjAxMC0yMDgxLTM4MTgiLCJiaXJ0aCI6MTk5NSwiZ3JhZGUiOjAsImFjY2Vzc1RpbWUiOiIyMDIxLTAxLTA1VDEzOjAzOjQwLjAwMFoiLCJjcmVhdGVkQXQiOiIyMDIxLTAxLTA1VDEzOjAzOjQwLjAwMFoiLCJ1cGRhdGVkQXQiOiIyMDIxLTAxLTA1VDEzOjAzOjQwLjAwMFoifSwiaWF0IjoxNjA5ODUxODIzLCJleHAiOjE2MTE1Nzk4MjMsImlzcyI6ImFmdW1lLWphY2twb3QifQ.Vb9-KO1DWOBhuVAoBzh0USybt5b5YpZqfqG1OU3snUY    
        400:
          description: Invalid username/password supplied
        401:
          description: ÎπÑÎ∞ÄÎ≤àÌò∏Í∞Ä ÏûòÎ™ªÎêú Í≤ΩÏö∞ / ÏïÑÏù¥ÎîîÍ∞Ä Ï°¥Ïû¨ÌïòÏßÄ ÏïäÎäî Í≤ΩÏö∞
          schema:
            type: object
            example: 
              message: ÎπÑÎ∞ÄÎ≤àÌò∏Í∞Ä ÏûòÎ™ªÎêòÏóàÏäµÎãàÎã§ / Ìï¥Îãπ Ï°∞Í±¥Ïóê ÏùºÏπòÌïòÎäî Îç∞Ïù¥ÌÑ∞Í∞Ä ÏóÜÏäµÎãàÎã§.
      x-swagger-router-controller: User
  /user/logout:
    get:
      tags:
      - WEB_user
      operationId: logoutUser
      produces:
      - application/json
      parameters: []
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: User
  /user/validate/email:
    get:
      tags:
      - user
      description: Ïù¥Î©îÏùº Ï§ëÎ≥µ Ï≤¥ÌÅ¨
      operationId: validateEmail
      produces:
      - application/json
      - application/x-www-urlencoded
      parameters:
      - in: query
        name: email
        type: string
        required: true
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              message:
                type: string
                example: Ïù¥Î©îÏùº Ï§ëÎ≥µ Ï≤¥ÌÅ¨
              data:
                type: boolean
                description: ÏÇ¨Ïö© Í∞ÄÎä• Ïó¨Î∂Ä
                example: true
      x-swagger-router-controller: User
  /user/validate/name:
    get:
      tags:
      - user
      description: Ïù¥Î¶Ñ Ï§ëÎ≥µ Ï≤¥ÌÅ¨
      operationId: validateName
      produces:
      - application/json
      - application/x-www-urlencoded
      parameters:
      - in: query
        name: nickname
        type: string
        required: true
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              message:
                type: string
                example: Ïù¥Î¶Ñ Ï§ëÎ≥µ Ï≤¥ÌÅ¨
              data:
                type: boolean
                description: ÏÇ¨Ïö© Í∞ÄÎä• Ïó¨Î∂Ä
                example: true
      x-swagger-router-controller: User
  /user/changePassword:
    put:
      tags:
      - user
      description: <h3> üé´Î°úÍ∑∏Ïù∏ ÌÜ†ÌÅ∞ ÌïÑÏàòüé´ </h3> <br/> Ïú†Ï†Ä ÎπÑÎ∞ÄÎ≤àÌò∏ Î≥ÄÍ≤Ω <br/>
      operationId: changePassword
      security:
        - userToken: []
      x-security-scopes:
        - user
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            prevPassword:
              type: string
            newPassword:
              type: string
          example:
            prevPassword: test
            newPassword: change
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: User
  /user/auth:
    post:
      tags:
      - user
      summary: Ïú†Ï†Ä Í∂åÌïú Ï°∞Ìöå
      operationId: authUser
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        schema:
          type: object
          properties:
            token:
              type: string
              description: userToken Í∞í
              example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWR4IjoxLCJuaWNrbmFtZSI6IuycpO2drOyEsSIsImdlbmRlciI6Im1hbGUiLCJwaG9uZSI6IjAxMC0yMDgxLTM4IiwiZW1haWwiOiJoZWUueW91bkBzYW1zdW5nLmNvbSIsImJpcnRoIjoxOTk1LCJpYXQiOjE2MDcwMDU3NTIsImV4cCI6MTYwODczMzc1MiwiaXNzIjoiYWZ1bWUtamFja3BvdCJ9.wHBPi8pQuzJRbUy4noAwdwhCRtA9mG_UrI-S0IUEkxY
      responses:
        200:
          description: Í∂åÌïú Ï°∞Ìöå ÏÑ±Í≥µ
          schema:
            allOf:
            - type: object
              properties:
                isAuth:
                  type: boolean
                  description: Î°úÍ∑∏Ïù∏ Ïó¨Î∂Ä
                  example: false
                isAdmin:
                  type: boolean
                  description: Í¥ÄÎ¶¨Ïûê Ïó¨Î∂Ä
                  example: false
            - $ref: '#/definitions/User'
      x-swagger-router-controller: User
  /user/{userIdx}:
    get:
      tags:
      - user
      operationId: getUserByIdx
      produces:
      - application/json
      parameters:
      - name: userIdx
        in: path
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: successful operation
          schema:
            allOf:
            - $ref: '#/definitions/User'
            - type: object
              properties:
                userIdx:
                  type: integer
              example:
                userIdx: 1
        400:
          description: Invalid userIdx supplied
        404:
          description: User not found
      x-swagger-router-controller: User
    put:
      tags:
      - user
      summary: Ïú†Ï†Ä Ï†ïÎ≥¥ ÏàòÏ†ï
      description: <h3> üé´Î°úÍ∑∏Ïù∏ ÌÜ†ÌÅ∞ ÌïÑÏàòüé´ </h3> <br/> Ïú†Ï†Ä Ï†ïÎ≥¥ ÏàòÏ†ï <br/>
      operationId: updateUser
      security:
        - userToken: []
      x-security-scopes:
        - user
      produces:
      - application/json
      parameters:
      - name: userIdx
        in: path
        description: name that need to be updated
        required: true
        type: string
      - in: body
        name: body
        description: Updated user object
        required: true
        schema: 
          $ref: '#/definitions/User'
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              message:
                type: string
              data:
                allOf:
                - $ref: '#/definitions/User'
                - type: object
                  properties:
                    userIdx:
                      type: integer
            example: 
              message: Ïú†Ï†Ä ÏàòÏ†ï ÏÑ±Í≥µ
              data:
                userIdx: 1
                nickname: nickname
                gender: WOMAN
                birth: 1995
                email: email
        401:
          description: login Token Ïùò UserIdxÏôÄ ÏùºÏπòÌïòÏßÄ ÏïäÎäî Í≤ΩÏö∞ /  login TokenÏù¥ ÏóÜÎäî Í≤ΩÏö∞
          schema:
            type: object
            example: 
              message: Í∂åÌïúÏù¥ ÏóÜÏäµÎãàÎã§ / Ïú†Ìö®ÌïòÏßÄ ÏïäÎäî ÌÜ†ÌÅ∞ÏûÖÎãàÎã§.
        404:
          description: User not found
      x-swagger-router-controller: User
    delete:
      tags:
      - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
      - application/json
      parameters:
      - name: userIdx
        in: path
        required: true
        type: string
      responses:
        400:
          description: Invalid username supplied
        404:
          description: User not found
      x-swagger-router-controller: User